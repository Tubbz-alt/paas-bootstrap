---
name: bosh

meta:
  environment: (( grab terraform_outputs.environment ))
  rds:
    host: (( grab terraform_outputs.bosh_db_address ))
    port: (( grab terraform_outputs.bosh_db_port ))
    user: (( grab terraform_outputs.bosh_db_username ))
    password: (( grab secrets.bosh_postgres_password ))
    database: (( grab terraform_outputs.bosh_db_dbname ))
  aws:
    default_security_groups:
    - (( grab terraform_outputs.bosh_managed_security_group ))
    region: (( grab terraform_outputs.region ))
    max_retries: 16

  bosh_private_ip: (( grab terraform_outputs.microbosh_static_private_ip ))
  bosh_public_ip: (( grab terraform_outputs.microbosh_static_public_ip ))

releases:
- name: "bosh"
  # 268.2.0 + https://github.com/cloudfoundry/bosh/commit/bc4bc20
  version: 0.1.1
  url: https://s3-eu-west-1.amazonaws.com/gds-paas-build-releases/bosh-0.1.1.tgz
  sha1: b69a2e11996f7daa9658dbacfe3c13137b667811
- name: "bosh-aws-cpi"
  version: "72"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=72"
  sha1: "b7999e95115bb691a630c07f0439ef5b577884c2"
- name: "bpm"
  version: "0.13.0"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=0.13.0"
  sha1: "4b6ebfdaa467c04855528172b099e565d679e0f5"
- name: db-admin
  version: 0.1.2
  url: https://s3-eu-west-1.amazonaws.com/gds-paas-build-releases/db-admin-0.1.2.tgz
  sha1: 50b04aaefabbb8a2c371b086f570b37e25607052
- name: "uaa"
  version: "66.0"
  url: "https://bosh.io/d/github.com/cloudfoundry/uaa-release?v=66.0"
  sha1: "2848d9fb65d2d556a918e8045359cf469c241123"

instance_groups:
- name: bosh
  instances: 1

  jobs:
  - {name: bpm, release: bpm}
  - {name: nats, release: bosh}
  - {name: director, release: bosh}
  - {name: health_monitor, release: bosh}
  - {name: registry, release: bosh}
  - {name: aws_cpi, release: bosh-aws-cpi}
  - {name: init-db, release: db-admin}
  - {name: uaa, release: uaa}

  resource_pool: bosh
  persistent_disk_pool: disks

  networks:
  - name: private
    static_ips:
    - (( grab meta.bosh_private_ip ))
    default: [dns, gateway]
  - name: public
    static_ips:
    - (( grab meta.bosh_public_ip ))

  properties:
    encryption:
      encryption_keys:
      - label: uaa-encryption-key-1
        passphrase: (( grab secrets.bosh_uaa_uaa_encryption_key_1 ))
      active_key_label: uaa-encryption-key-1
    uaa:
      url: (( concat "https://" $BOSH_FQDN ":8443" ))
      port: -1
      sslPrivateKey: (( grab secrets.bosh_uaa_cert ))
      sslCertificate: (( grab secrets.bosh_uaa_key ))
      jwt:
        policy:
          active_key_id: uaa-jwt-key-1
          keys:
            uaa-jwt-key-1:
              signingKey: (( grab secrets.bosh_uaa_jwt_signing_key.private_key ))
      scim:
        groups:
          bosh.admin: 'User has admin access on any Director'
          bosh.read: 'User has read access on any Director'
          bosh.stemcells.upload: 'User can upload new stemcells'
          bosh.releases.upload: 'User can upload new releases'

      clients:
        admin:
          override: true
          authorized-grant-types: client_credentials
          scope: ""
          authorities: bosh.admin
          secret: (( grab secrets.bosh_admin_password ))
        hm:
          override: true
          authorized-grant-types: client_credentials
          scope: ""
          authorities: bosh.admin
          secret: (( grab secrets.bosh_hm_director_password ))
        bosh_exporter:
          override: true
          authorized-grant-types: client_credentials
          scope: ""
          authorities: bosh.read
          secret: (( grab secrets.bosh_bosh_exporter_password ))
      login:
        client_secret: (( grab secrets.bosh_uaa_login_client_password ))
      zones: {internal: {hostnames: []}}

    login:
      saml:
        activeKeyId: uaa-saml-key-1
        keys:
          uaa-saml-key-1:
            key: (( grab secrets.bosh_uaa_service_provider_ssl_key))
            certificate: (( grab secrets.bosh_uaa_service_provider_ssl_cert))
            passphrase: ""

    uaadb:
      address: (( grab terraform_outputs.bosh_db_address ))
      port: (( grab terraform_outputs.bosh_db_port ))
      db_scheme: postgresql
      databases:
      - tag: uaa
        name: uaa
      roles:
      - tag: admin
        name: uaa
        password: (( grab secrets.bosh_uaa_postgres_password ))

    init-db:
      connection_string: (( concat "postgres://" terraform_outputs.bosh_db_username ":" secrets.bosh_postgres_password "@" terraform_outputs.bosh_db_address ":" terraform_outputs.bosh_db_port "/postgres" ))
      databases:
      - name: uaa
        owner: uaa
        extensions:
        - citext
        - pgcrypto
      roles:
      - name: uaa
        password: (( grab secrets.bosh_uaa_postgres_password ))
        parent_role: (( grab terraform_outputs.bosh_db_username ))
    nats:
      address: 127.0.0.1
      tls:
        ca: (( grab secrets.bosh_ca_cert ))
        client_ca:
          certificate: (( grab secrets.bosh_ca_cert ))
          private_key: (( grab secrets.bosh_ca_key ))
        server:
          certificate: (( grab secrets.default_nats_bosh_internal_cert ))
          private_key: (( grab secrets.default_nats_bosh_internal_key ))
        director:
          certificate: (( grab secrets.default_director_bosh_internal_cert ))
          private_key: (( grab secrets.default_director_bosh_internal_key ))
        health_monitor:
          certificate: (( grab secrets.default_hm_bosh_internal_cert ))
          private_key: (( grab secrets.default_hm_bosh_internal_key ))
      allow_legacy_agents: false

    director:
      address: 127.0.0.1
      name: (( grab $DEPLOY_ENV ))
      db: (( grab meta.rds ))
      disks:
        max_orphaned_age_in_days: 0
      cpi_job: (( grab cloud_provider.template.name ))
      user_management:
        provider: uaa
        uaa:
          url: (( concat "https://" $BOSH_FQDN ":8443" ))
          public_key: (( grab secrets.bosh_uaa_jwt_signing_key.public_key ))
      trusted_certs: (( grab secrets.bosh_ca_cert ))
      events:
        record_events: true
      flush_arp: true
      enable_dedicated_status_worker: true
      workers: 4
      ssl:
        cert: (( grab secrets.bosh_director_cert ))
        key: (( grab secrets.bosh_director_key ))
      local_dns:
        enabled: true
        use_dns_addresses: true

    hm:
      director_account:
        client_id: hm
        client_secret: (( grab secrets.bosh_hm_director_password ))
        ca_cert: (( grab secrets.bosh_ca_cert ))
      resurrector_enabled: false

    agent:
      mbus: (( concat "nats://" $BOSH_FQDN ":4222" ))

    registry:
      db: (( grab meta.rds ))
      http:
        # Properties used by director and registry jobs
        user: admin
        password: (( grab secrets.bosh_registry_password ))
      # Properties used by AWS CPI
      host: (( grab $BOSH_FQDN ))
      username: admin
      password: (( grab secrets.bosh_registry_password ))

    compiled_package_cache:
      options:
        credentials_source: env_or_profile
        bucket_name: (( concat "gds-paas-bosh-cache-" $AWS_ACCOUNT meta.bosh.compiled_package_cache.s3_bucket_suffix ))

    blobstore:
      provider: s3
      credentials_source: env_or_profile
      bucket_name: (( grab terraform_outputs.bosh_blobstore_bucket_name ))
      s3_region: (( grab meta.aws.region ))

    aws:
      credentials_source: env_or_profile
      default_key_name: (( grab terraform_outputs.key_pair_name ))
      default_security_groups: (( grab meta.aws.default_security_groups ))
      default_iam_instance_profile: bosh-managed
      region: (( grab meta.aws.region ))
      max_retries: (( grab meta.aws.max_retries ))

    ntp:
    - 169.254.169.123

cloud_provider:
  template:
    name: aws_cpi
    release: bosh-aws-cpi

  ssh_tunnel:
    host: (( grab $BOSH_FQDN_EXTERNAL ))
    port: 22
    user: vcap
    private_key: .ssh/bosh_id_rsa

  mbus: (( concat "https://mbus:" secrets.bosh_mbus_bootstrap_password "@" $BOSH_FQDN_EXTERNAL ":6868" ))

  properties:
    agent:
      mbus: (( concat "https://mbus:" secrets.bosh_mbus_bootstrap_password "@0.0.0.0:6868" ))
    blobstore:
      provider: local
      path: /var/vcap/micro_bosh/data/cache
    aws:
      credentials_source: env_or_profile
      default_key_name: (( grab terraform_outputs.bosh_ssh_key_pair_name ))
      default_security_groups: (( grab meta.aws.default_security_groups ))
      region: (( grab meta.aws.region ))
      max_retries: (( grab meta.aws.max_retries ))
    ntp:
    - 169.254.169.123

disk_pools:
- name: disks
  disk_size: 32768
  cloud_properties:
    type: gp2

resource_pools:
- name: bosh
  network: private
  stemcell:
    url: https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-xenial-go_agent?v=170.9
    sha1: 87b2b4990544baed1d3b0561bc391ca98cb28062
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk: {size: 40000, type: gp2}
    availability_zone: (( grab terraform_outputs.bosh_az ))
    iam_instance_profile: (( grab $BOSH_INSTANCE_PROFILE ))
  env:
    bosh:
      password: (( grab secrets.bosh_vcap_password ))

networks:
- name: private
  type: manual
  subnets:
  - range: (( grab terraform_outputs.bosh_subnet_cidr ))
    gateway: (( grab terraform_outputs.bosh_default_gw ))
    dns: [10.0.0.2]
    cloud_properties:
      subnet: (( grab terraform_outputs.bosh_subnet_id ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
      - (( grab terraform_outputs.ssh_security_group ))
- name: public
  type: vip

tags:
  deploy_env: (( grab terraform_outputs.environment ))
