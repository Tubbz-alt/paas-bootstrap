---
name: (( grab meta.environment ))

meta:
  environment: (( grab terraform_outputs.environment ))
  rds:
    host: (( grab terraform_outputs.bosh_db_address ))
    port: (( grab terraform_outputs.bosh_db_port ))
    user: (( grab terraform_outputs.bosh_db_username ))
    password: (( grab secrets.bosh_postgres_password ))
    database: (( grab terraform_outputs.bosh_db_dbname ))
  aws:
    common:
      default_security_groups:
      - (( grab terraform_outputs.bosh_managed_security_group ))
      region: (( grab terraform_outputs.region ))
    cloud_provider:
      credentials_source: env_or_profile
      default_key_name: (( grab terraform_outputs.bosh_ssh_key_pair_name ))
      default_security_groups: (( grab meta.aws.common.default_security_groups ))
      region: (( grab meta.aws.common.region ))
    bosh_properties:
      credentials_source: env_or_profile
      default_key_name: (( grab terraform_outputs.key_pair_name ))
      default_security_groups: (( grab meta.aws.common.default_security_groups ))
      default_iam_instance_profile: bosh-managed
      region: (( grab meta.aws.common.region ))

  bosh_private_ip: (( grab terraform_outputs.microbosh_static_private_ip ))
  bosh_public_ip: (( grab terraform_outputs.microbosh_static_public_ip ))

releases:
- name: bosh
  url: https://bosh.io/d/github.com/cloudfoundry/bosh?v=255.8
  sha1: 6b12652650b87810dcef1be1f6a6d23f1c0c13a7
- name: bosh-aws-cpi
  version: 60
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=60
  sha1: 8e40a9ff892204007889037f094a1b0d23777058

disk_pools:
- name: disks
  disk_size: 32768
  cloud_properties:
    type: gp2

jobs:
- name: bosh
  instances: 1

  templates:
  - {name: nats, release: bosh}
  - {name: redis, release: bosh}
  - {name: director, release: bosh}
  - {name: health_monitor, release: bosh}
  - {name: registry, release: bosh}
  - {name: aws_cpi, release: bosh-aws-cpi}

  resource_pool: bosh
  persistent_disk_pool: disks

  networks:
  - name: private
    static_ips:
    - (( grab meta.bosh_private_ip ))
    default: [dns, gateway]
  - name: public
    static_ips:
    - (( grab meta.bosh_public_ip ))

  properties:
    nats:
      address: 127.0.0.1
      user: nats
      password: (( grab secrets.bosh_nats_password ))

    redis:
      password: (( grab secrets.bosh_redis_password ))

    director:
      address: 127.0.0.1
      name: paas
      db: (( grab meta.rds ))
      disks:
        max_orphaned_age_in_days: 0
      cpi_job: (( grab cloud_provider.template.name ))
      user_management:
        local:
          users:
            - { name: admin, password: (( grab secrets.bosh_admin_password )) }
            - { name: hm, password: (( grab secrets.bosh_hm_director_password )) }
      trusted_certs: (( grab secrets.bosh_ca_cert ))

    hm:
      director_account:
        user: hm
        password: (( grab secrets.bosh_hm_director_password ))
      resurrector_enabled: false

    agent:
      mbus: (( concat "nats://nats:" secrets.bosh_nats_password "@" $BOSH_FQDN ":4222" ))

    registry:
      db: (( grab meta.rds ))
      http:
        # Properties used by director and registry jobs
        user: admin
        password: (( grab secrets.bosh_registry_password ))
      # Properties used by AWS CPI
      host: (( grab $BOSH_FQDN ))
      username: admin
      password: (( grab secrets.bosh_registry_password ))

    compiled_package_cache:
      options:
        credentials_source: env_or_profile
        bucket_name: (( concat "gds-paas-bosh-cache-" $AWS_ACCOUNT ))

    blobstore:
      provider: s3
      credentials_source: env_or_profile
      bucket_name: (( grab terraform_outputs.bosh_blobstore_bucket_name ))
      s3_region: (( grab terraform_outputs.region ))

    aws: (( grab meta.aws.bosh_properties ))

properties: ~

cloud_provider:
  template:
    name: aws_cpi
    release: bosh-aws-cpi

  ssh_tunnel:
    host: (( grab $BOSH_FQDN_EXTERNAL ))
    port: 22
    user: vcap
    private_key: .ssh/bosh_id_rsa

  mbus: (( concat "https://mbus:" secrets.bosh_nats_password "@" $BOSH_FQDN_EXTERNAL ":6868" ))

  properties:
    agent:
      mbus: (( concat "https://mbus:" secrets.bosh_nats_password "@0.0.0.0:6868" ))
    blobstore:
      provider: local
      path: /var/vcap/micro_bosh/data/cache
    aws: (( grab meta.aws.cloud_provider ))

resource_pools:
- name: bosh
  network: private
  stemcell:
    url: https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3232.13
    sha1: 477371a335d172f4728c7a8806448edb9703104c
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk: {size: 40000, type: gp2}
    availability_zone: (( grab terraform_outputs.bosh_az ))
    iam_instance_profile: (( grab $BOSH_INSTANCE_PROFILE ))
  env:
    bosh:
      password: (( grab secrets.bosh_vcap_password ))

networks:
- name: private
  type: manual
  subnets:
  - range: (( grab terraform_outputs.bosh_subnet_cidr ))
    gateway: (( grab terraform_outputs.bosh_default_gw ))
    dns: [10.0.0.2]
    cloud_properties:
      subnet: (( grab terraform_outputs.bosh_subnet_id ))
      security_groups:
      - (( grab terraform_outputs.bosh_security_group ))
- name: public
  type: vip
